# ------------------------------------
#   欢迎您使用阿里云函数计算 FC 组件进行项目开发
#   组件仓库地址：https://github.com/devsapp/fc
#   组件帮助文档：https://www.serverless-devs.com/fc/readme
#   Yaml参考文档：https://www.serverless-devs.com/fc/yaml/readme
#   关于：
#      - Serverless Devs和FC组件的关系、如何声明/部署多个函数、超过50M的代码包如何部署
#      - 关于.fcignore使用方法、工具中.s目录是做什么、函数进行build操作之后如何处理build的产物
#   等问题，可以参考文档：https://www.serverless-devs.com/fc/tips
#   关于如何做CICD等问题，可以参考：https://www.serverless-devs.com/serverless-devs/cicd
#   关于如何进行环境划分等问题，可以参考：https://www.serverless-devs.com/serverless-devs/extend
#   更多函数计算案例，可参考：https://github.com/devsapp/awesome/
#   有问题快来钉钉群问一下吧：33947367
# ------------------------------------

edition: 1.0.0 #  命令行YAML规范版本，遵循语义化版本（Semantic Versioning）规范
name: start-fc-sonic
# access 是当前应用所需要的密钥信息配置：
# 密钥配置可以参考：https://www.serverless-devs.com/serverless-devs/command/config
# 密钥使用顺序可以参考：https://www.serverless-devs.com/serverless-devs/tool#密钥使用顺序与规范
access: "default"

vars:
  region: "cn-hongkong"
  service:
    name: "website-sonic"
    description: 'Serverless Devs'
    role: 'acs:ram::${config(AccountID)}:role/AliyunFcDefaultRole'
    # logConfig: auto
      # enableRequestMetrics: true
      # enableInstanceMetrics: true
      # logBeginRule: None
      # project: ${config(AccountID)}-cn-hongkong-logproject
      # logstore: function-log
    nasConfig: auto
    # ossMountConfig:
    #   mountPoints:
    #     - bucketName: vine-oss-drive
    #       endpoint: http://oss-cn-hongkong-internal.aliyuncs.com
    #       bucketPath: /sonic
    #       mountDir: /mnt/oss
    #       readOnly: false
  environmentVariables:     #  为函数配置环境变量
  domainName: ${env(domainName)}
  bucketName: ${env(bucketName)}
  
services:
  fc-nas-init:
    component: fc
    props:
      region: ${vars.region} # 关于变量的使用方法，可以参考：https://www.serverless-devs.com/serverless-devs/yaml#变量赋值
      service: ${vars.service}
      function:
        name: "nas-init"
        description: 'Prepare nas'
        codeUri: './code/init'
        runtime: python3.9
        timeout: 1200
        memorySize: 1024
        cpu: 1.0
        diskSize: 512
        instanceConcurrency: 1
        handler: index.handler

  fc-sonic: # 业务名称/模块名称
    component: fc # 组件名称，Serverless Devs 工具本身类似于一种游戏机，不具备具体的业务能力，组件类似于游戏卡，用户通过向游戏机中插入不同的游戏卡实现不同的功能，即通过使用不同的组件实现不同的具体业务能力
    actions: # 自定义执行逻辑，关于actions 的使用，可以参考：https://www.serverless-devs.com/serverless-devs/yaml#行为描述
      pre-deploy: # 在deploy之前运行
        - component: fc build --use-docker --dockerfile ./code/sonic/Dockerfile ./
    props: # 组件的属性值
      region: ${vars.region}
      service: ${vars.service}
      function:
        name: "sonic"
        description: 'sonic  Function'
        timeout: 60
        memorySize: 128
        cpu: 0.1
        diskSize: 512
        instanceConcurrency: 12
        caPort: 8080
        runtime: custom-container
        codeUri: './code/sonic'
        customContainerConfig:
          image: ${env(image_url)}
      triggers:
        - name: httpTrigger
          type: http
          config:
            authType: anonymous
            methods:
              - GET
              - POST
              - PUT
              - DELETE
              - HEAD
              - OPTIONS
      customDomains:
        - domainName: ${vars.domainName}
          protocol: HTTPS
          routeConfigs:
            - path: /*
          certConfig:
            certName: certName
            certificate: oss://${vars.region}/${vars.bucketName}/fc-acme/${vars.domainName}_cert.pem
            privateKey: oss://${vars.region}/${vars.bucketName}/fc-acme/${vars.domainName}_key.pem

  keep-warm: # 辅助函数, 2 min 定时预热
    component: fc # 组件名称
    actions:
      post-deploy:
        - component: fc invoke
    props: # 组件的属性值
      region: ${vars.region}
      service: ${vars.service}
      function:
        name: keep-warm
        description: 'Serverless Devs Web Framework Helper Function'
        codeUri: './code/keep-warm'
        handler: index.handler
        runtime: python3
        timeout: 120
        memorySize: 128
        environmentVariables:
          KEEP_WARM_URL: ${fc-sonic.output.url.system_url}
      triggers:
        - name: timerTrigger
          type: timer
          config:
            cronExpression: '@every 5m'
            enable: false
#END
